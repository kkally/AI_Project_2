from fastapi import FastAPI, Request
from fastapi.responses import HTMLResponse
from pyngrok import ngrok
import nest_asyncio
from typing import Optional, List
import uvicorn
from fastapi import File, UploadFile
import os
from keras.models import load_model
from keras.preprocessing import image
import numpy as np

from keras.applications.vgg16 import VGG16
from keras.applications.vgg16 import preprocess_input, decode_predictions

app = FastAPI()



@app.get('/')
def read_root():
  return {'hello':'world'}



model=VGG16(weights='imagenet')

def prepare_img(img_path):
  img = image.load_img(img_path , target_size=(224,224))
  x = image.img_to_array(img)
  x = np.expand_dims(x, axis=0)
  x = preprocess_input(x)
  return x


@app.post('/pred')
async def image_predict(files:List[UploadFile] = File(...)):
  for file in files:
    contents = await file.read()
    with open(os.path.join('/content/',file.filename), 'wb') as fp:
      fp.write(contents)
      preds = model.predict(prepare_img(os.path.join('/content/', file.filename)))
      pred = preds[:]
      pop = decode_predictions(pred, top=3)[0]
  return HTMLResponse(content=F"<h1>{pop}", status_code=200)
  


ngrok_tunnel = ngrok.connect(8000)
print('Public URL:' , ngrok_tunnel.public_url)
nest_asyncio.apply()
uvicorn.run(app, host='0.0.0.0', port=8000)